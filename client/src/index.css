@tailwind base;
@tailwind components;
@tailwind utilities;

/* Prevent horizontal scroll on mobile (especially in RTL) */
html, body {
  overflow-x: hidden;
  max-width: 100vw;
}

body {
  position: relative;
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 200 15% 20%;

  --border: 200 8% 88%;

  --card: 0 0% 100%;

  --card-foreground: 200 15% 20%;

  --card-border: 200 6% 94%;

  --sidebar: 200 4% 96%;

  --sidebar-foreground: 200 15% 22%;

  --sidebar-border: 200 6% 90%;

  --sidebar-primary: 190 65% 45%;

  --sidebar-primary-foreground: 190 65% 98%;

  --sidebar-accent: 200 8% 92%;

  --sidebar-accent-foreground: 200 15% 25%;

  --sidebar-ring: 190 65% 45%;

  --popover: 0 0% 99%;

  --popover-foreground: 200 15% 20%;

  --popover-border: 200 5% 93%;

  --primary: 190 65% 45%;

  --primary-foreground: 190 65% 98%;

  --secondary: 200 8% 93%;

  --secondary-foreground: 200 15% 25%;

  --muted: 200 10% 94%;

  --muted-foreground: 200 10% 45%;

  --accent: 160 12% 94%;

  --accent-foreground: 160 55% 25%;

  --destructive: 0 72% 51%;

  --destructive-foreground: 0 0% 98%;

  --input: 200 12% 75%;
  --ring: 190 65% 45%;
  --chart-1: 190 65% 35%;
  --chart-2: 160 55% 38%;
  --chart-3: 200 50% 40%;
  --chart-4: 180 60% 42%;
  --chart-5: 170 58% 36%;

  --font-sans: 'Inter', 'Cairo', -apple-system, BlinkMacSystemFont, sans-serif;
  --font-serif: 'Playfair Display', Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(200 15% 20% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(200 15% 20% / 0.08);
  --shadow-sm: 0px 2px 4px 0px hsl(200 15% 20% / 0.06), 0px 1px 2px -1px hsl(200 15% 20% / 0.04);
  --shadow: 0px 4px 6px -1px hsl(200 15% 20% / 0.08), 0px 2px 4px -2px hsl(200 15% 20% / 0.05);
  --shadow-md: 0px 6px 12px -2px hsl(200 15% 20% / 0.10), 0px 3px 6px -3px hsl(200 15% 20% / 0.06);
  --shadow-lg: 0px 10px 20px -4px hsl(200 15% 20% / 0.12), 0px 4px 8px -4px hsl(200 15% 20% / 0.08);
  --shadow-xl: 0px 20px 30px -6px hsl(200 15% 20% / 0.15), 0px 8px 12px -6px hsl(200 15% 20% / 0.10);
  --shadow-2xl: 0px 30px 50px -12px hsl(200 15% 20% / 0.20);
  --tracking-normal: 0em;
  --spacing: 0.25rem;
  --header-height: 4rem; /* 64px - mobile header height */

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 200 15% 12%;

  --foreground: 0 0% 95%;

  --border: 200 12% 22%;

  --card: 200 12% 16%;

  --card-foreground: 0 0% 95%;

  --card-border: 200 12% 20%;

  --sidebar: 200 10% 14%;

  --sidebar-foreground: 0 0% 92%;

  --sidebar-border: 200 10% 18%;

  --sidebar-primary: 190 50% 55%;

  --sidebar-primary-foreground: 190 50% 98%;

  --sidebar-accent: 200 8% 18%;

  --sidebar-accent-foreground: 0 0% 90%;

  --sidebar-ring: 190 50% 55%;

  --popover: 200 12% 17%;

  --popover-foreground: 0 0% 95%;

  --popover-border: 200 10% 21%;

  --primary: 190 50% 55%;

  --primary-foreground: 190 50% 98%;

  --secondary: 200 8% 20%;

  --secondary-foreground: 0 0% 92%;

  --muted: 200 8% 18%;

  --muted-foreground: 0 0% 70%;

  --accent: 160 10% 19%;

  --accent-foreground: 0 0% 88%;

  --destructive: 0 65% 48%;

  --destructive-foreground: 0 0% 98%;

  --input: 200 15% 32%;
  --ring: 190 50% 55%;
  --chart-1: 190 55% 65%;
  --chart-2: 160 50% 62%;
  --chart-3: 200 45% 68%;
  --chart-4: 180 52% 64%;
  --chart-5: 170 48% 60%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.20);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.25);
  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.22), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.28), 0px 2px 4px -2px hsl(0 0% 0% / 0.20);
  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.32), 0px 3px 6px -3px hsl(0 0% 0% / 0.24);
  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.38), 0px 4px 8px -4px hsl(0 0% 0% / 0.28);
  --shadow-xl: 0px 20px 30px -6px hsl(0 0% 0% / 0.45), 0px 8px 12px -6px hsl(0 0% 0% / 0.35);
  --shadow-2xl: 0px 30px 50px -12px hsl(0 0% 0% / 0.55);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* ========================================
   PHASE 8: MOBILE UX OPTIMIZATIONS
   ======================================== */

/* Task 8.2: iOS Safe Area Support */
@supports (padding: env(safe-area-inset-bottom)) {
  /* Mobile bottom bar safe area */
  .md\:hidden.fixed.bottom-0 {
    padding-bottom: calc(0.75rem + env(safe-area-inset-bottom));
  }
  
  /* Desktop fixed buttons safe area */
  .hidden.md\:block .fixed {
    bottom: calc(1.5rem + env(safe-area-inset-bottom));
  }
}

/* Task 8.4: Touch Action Optimization */
button,
a[role="button"],
[data-testid^="button-"],
[data-testid^="cta-"],
[data-testid^="link-"] {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

/* Prevent double-tap zoom on interactive elements */
.no-double-tap-zoom {
  touch-action: manipulation;
}

/* Task 8.8: Enhanced Focus Indicators */
*:focus-visible {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
  border-radius: 4px;
}

/* Skip to Content Link for Accessibility */
.skip-to-content {
  position: absolute;
  top: -40px;
  left: 0;
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  padding: 8px 16px;
  text-decoration: none;
  z-index: 100;
  border-radius: 4px;
}

.skip-to-content:focus {
  top: 0;
}

/* Task 8.6: Mobile-Specific Spacing */
@media (max-width: 768px) {
  .section-padding {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
  
  .container {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  /* Ensure minimum touch targets on mobile */
  button,
  a[role="button"],
  [data-testid^="button-"],
  [data-testid^="cta-"] {
    min-height: 44px;
    min-width: 44px;
  }
}